# -*- coding: utf-8 -*-

import os
import random
# Form implementation generated from reading ui file 'randStuGUI3.0.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon

student_list_path = r'nameList'
student_list = []


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(600, 300)
        # 班级标签
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(50, 10, 200, 60))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.label.setFont(font)
        self.label.setObjectName("label")
        # 姓名标签
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(50, 100, 200, 60))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        # 文本输入框
        self.textEdit = QtWidgets.QTextEdit(Form)
        self.textEdit.setGeometry(QtCore.QRect(250, 10, 300, 60))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        # 文本框
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setGeometry(QtCore.QRect(250, 100, 300, 60))
        self.textBrowser.setObjectName("textBrowser")
        # 随机抽查按钮
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(250, 190, 300, 70))
        font = QtGui.QFont()
        font.setPointSize(32)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "点名系统v4.2"))
        Form.setWindowIcon(QIcon("电一下.ico"))

        self.label.setText(_translate("Form", "班级："))
        self.label_2.setText(_translate("Form", "姓名："))
        self.pushButton.setText(_translate("Form", "随机抽查"))
        self.textEdit.setStyleSheet('background-color:yellow;color:blue;font-size:40px')
        self.textEdit.setHtml(_translate("Form",
                                         "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                         "<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
                                         "p, li { white-space: pre-wrap; }\n"
                                         "</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
                                         "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))

        def list_loading():
            student_list.clear()
            cls = self.textEdit.toPlainText()
            text = cls + '.txt'
            if not os.path.exists(student_list_path):
                os.mkdir(student_list_path)
            else:
                list_path = os.path.join(student_list_path, text)
                if not os.path.exists(list_path):
                    return -1
                else:
                    with open(list_path, 'r', encoding='UTF-8') as rstream:
                        container = rstream.readlines()
                        for name in container:
                            student_list.append(name)
                    return student_list

        def doc_create():
            if not os.path.exists(student_list_path):
                os.mkdir(student_list_path)
                if len(os.listdir(student_list_path)) == 0:
                    return False
                else:
                    return True

        def random_name():
            if list_loading() and len(student_list) - 1 >= 0:
                randomName = random.randint(0, len(student_list) - 1)
                return student_list[randomName]
            else:
                return False
            # name = student_list[randomName]

        def check():
            if doc_create():
                if random_name():
                    self.textBrowser.setText(random_name())
                    self.textBrowser.setStyleSheet('background-color:yellow;color:blue;font-size:40px')
                else:
                    self.textBrowser.setText("名字不存在！")
                    self.textBrowser.setStyleSheet('background-color:yellow;color:red;font-size:30px')
            else:
                self.textBrowser.setText("将名单以.txt加入nameList")
                self.textBrowser.setStyleSheet('background-color:yellow;color:red;font-size:20px')

        self.pushButton.pressed.connect(check)

    # def Trans_except(self, err):
    #     """
    #
    #     :rtype: object
    #     """
    #     translator = Translator(to_lang='chinese')
    #     translation = translator.translate(str(self))
    #     print(self, ':', translation)


if __name__ == '__main__':
    # try:
    app = QtWidgets.QApplication(sys.argv)
    window = Ui_Form()
    From = QtWidgets.QDialog()
    window.setupUi(From)
    # From.setWindowIcon(QIcon('电一下.ico'))
    From.show()
    sys.exit(app.exec_())
    # except Exception as err:
    #     print(err)
    # finally:
    #     pass
